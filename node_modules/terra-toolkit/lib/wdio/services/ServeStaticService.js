'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _serveStatic = require('../../../scripts/serve/serve-static');

var _serveStatic2 = _interopRequireDefault(_serveStatic);

var _services = require('../../../config/wdio/services.default-config');

var _services2 = _interopRequireDefault(_services);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SERVE_STATIC_DEFAULTS = _services2.default.serveStatic;

var ServeStaticService = function () {
  function ServeStaticService() {
    (0, _classCallCheck3.default)(this, ServeStaticService);
  }

  (0, _createClass3.default)(ServeStaticService, [{
    key: 'onPrepare',
    value: function () {
      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
        var _this = this;

        var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var site, webpackConfig, verbose, port, index, locale, serveOptions;
        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                site = config.site;
                webpackConfig = config.webpackConfig;

                if (!(!webpackConfig && !site)) {
                  _context.next = 5;
                  break;
                }

                // eslint-disable-next-line no-console
                console.warn('[Terra-Toolkit:serve-static] No webpack configuration provided');
                return _context.abrupt('return');

              case 5:
                verbose = config.logLevel !== 'silent';
                port = (config.serveStatic || {}).port || SERVE_STATIC_DEFAULTS.port;
                index = (config.serveStatic || {}).index || SERVE_STATIC_DEFAULTS.index;
                // Explicitly not providing a fallback locale. Providing a fallback will lock the locale for all test runs when using the tt-wdio-runner.

                locale = (config || {}).locale;

                // Ensure the server was properly shut down.

                if (!this.server) {
                  _context.next = 12;
                  break;
                }

                _context.next = 12;
                return this.stop();

              case 12:
                serveOptions = (0, _extends3.default)({}, site && { site: site, disk: true }, {
                  config: webpackConfig,
                  port: port,
                  index: index,
                  locale: locale,
                  verbose: verbose
                });
                _context.next = 15;
                return ServeStaticService.startService(serveOptions).then(function (server) {
                  _this.server = server;
                });

              case 15:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function onPrepare() {
        return _ref.apply(this, arguments);
      }

      return onPrepare;
    }()
  }, {
    key: 'onComplete',
    value: function () {
      var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2() {
        return _regenerator2.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return this.stop();

              case 2:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function onComplete() {
        return _ref2.apply(this, arguments);
      }

      return onComplete;
    }()

    // Options include config, site, port, index, locale, verbose

  }, {
    key: 'stop',
    value: function stop() {
      var _this2 = this;

      return new _promise2.default(function (resolve) {
        // eslint-disable-next-line no-console
        console.log('[Terra-Toolkit:serve-static] Closing Server');
        if (_this2.server) {
          _this2.server.close();
          _this2.server = null;
        }
        resolve();
      });
    }
  }], [{
    key: 'startService',
    value: function startService(serveOptions) {
      return (0, _serveStatic2.default)((0, _extends3.default)({}, serveOptions, { production: true
      }));
    }
  }]);
  return ServeStaticService;
}();

exports.default = ServeStaticService;